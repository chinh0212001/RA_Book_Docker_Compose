# version: '3.9'

# services:
#   mysqldb:
#     image: mysql:5.7
#     restart: unless-stopped
#     env_file: ./.env
#     environment:
#       - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
#       - MYSQL_DATABASE=$MYSQLDB_DATABASE
#       - MYSQL_ALLOW_EMPTY_PASSWORD=false
#     ports:
#       - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
#     volumes:
#       - db:/var/lib/mysql

#   webapi:
#     depends_on:
#       - mysqldb
#     build: ./webapi
#     restart: on-failure
#     env_file: ./.env
#     ports:
#       - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
#     environment:
#       SPRING_APPLICATION_JSON: '{ 
#         "spring.datasource.url"                   : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false&characterEncoding=UTF-8", 
#         "spring.datasource.username"              : "$MYSQLDB_USER", 
#         "spring.datasource.password"              : "$MYSQLDB_ROOT_PASSWORD", 
#         "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5Dialect", 
#         "spring.jpa.hibernate.ddl-auto"           : "update", 
#         "jwt.secretKey"                           : "rabook", 
#         "jwt.tokenExpirationAfterDays"            : "14", 
#         "jwt.tokenPrefix"                         : "Bearer " 
#         }'

# volumes:
#   db:

version: '3.9'
services:
  mysqldb:
    image: mysql:8.0.31
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpassword
      - MYSQL_DATABASE=rabook
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - db:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: always

  webapi:
    build:
      context: ./webapi
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mysqldb
    environment:
      - MYSQL_HOST=mysqldb
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=secret
      - MYSQL_DATABASE=rabook
      - MYSQL_PORT=3306
    restart: always
  
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - 80:80
      
volumes:
  db:
